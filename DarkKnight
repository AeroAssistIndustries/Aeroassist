<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AeroAssist - Roadside Service</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            height: 100vh;
            background-color: #000;
            color: #fff;
            font-family: Arial, sans-serif;
        }
        header {
            text-align: center;
            margin-top: 20px;
        }
        h1 {
            font-size: 2.8rem;
            color: #00ffcc;
            text-shadow: 0 0 10px #00ffcc, 0 0 20px #00ffcc, 0 0 30px #00ffcc;
            text-transform: uppercase;
            margin: 0;
        }
        h2 {
            font-size: 1.2rem;
            color: #ffffff;
            text-shadow: 0 0 5px #ffffff;
            margin: 5px 0 20px;
        }
        .button-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            margin-top: 20px;
        }
        button {
            position: relative;
            padding: 15px 40px;
            font-size: 18px;
            color: #000;
            background: linear-gradient(90deg, #00ffcc, #008080);
            border: none;
            border-radius: 8px;
            text-transform: uppercase;
            font-weight: bold;
            width: 250px;
            cursor: pointer;
            text-align: center;
            box-shadow: 0 0 10px #00ffcc, 0 0 20px #00ffcc, 0 0 30px #00ffcc;
            transition: transform 0.2s ease, box-shadow 0.3s ease;
        }
        button:hover {
            transform: scale(1.1);
            box-shadow: 0 0 20px #00ffcc, 0 0 40px #00ffcc, 0 0 60px #00ffcc;
        }
        button:active {
            transform: scale(0.98);
            box-shadow: 0 0 10px #008080, 0 0 20px #008080, 0 0 30px #008080;
        }
        button::before {
            content: '';
            position: absolute;
            top: -5px;
            left: -5px;
            right: -5px;
            bottom: -5px;
            border: 2px solid #00ffcc;
            border-radius: 10px;
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            100% {
                transform: scale(1.2);
                opacity: 0;
            }
        }
        #countdown {
            margin-top: 20px;
            font-size: 1.5rem;
            color: #00ffcc;
            display: none;
            text-shadow: 0 0 10px #00ffcc, 0 0 20px #00ffcc;
        }
        #map {
            margin-top: 20px;
            width: 80%;
            height: 300px;
            border: 2px solid #00ffcc;
            border-radius: 10px;
            box-shadow: 0 0 10px #00ffcc, 0 0 20px #00ffcc;
            display: none;
        }
    </style>
    <!-- Load Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>
<body>
    <header>
        <h1>AeroAssist Industries</h1>
        <h2>Roadside Service</h2>
    </header>
    <div class="button-container">
        <button onclick="handleServiceRequest('Low Fuel')">Low Fuel</button>
        <button onclick="handleServiceRequest('Flat Tire')">Flat Tire</button>
        <button onclick="handleServiceRequest('Accident')">Accident</button>
    </div>
    <div id="countdown"></div>
    <div id="map"></div>

    <!-- Load Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        let map; // Global map variable
        let serviceMarker, breakdownMarker;

        function handleServiceRequest(serviceType) {
            alert(`Help is on the way for: ${serviceType}!`);
            startCountdown(15 * 60); // 15 minutes countdown
            getUserLocation(); // Use the user's real-time location
        }

        function startCountdown(duration) {
            const countdownElement = document.getElementById("countdown");
            countdownElement.style.display = "block";
            let timer = duration, minutes, seconds;

            const interval = setInterval(() => {
                minutes = Math.floor(timer / 60);
                seconds = timer % 60;

                // Format the timer as mm:ss
                seconds = seconds < 10 ? "0" + seconds : seconds;
                countdownElement.textContent = `ETA: ${minutes}:${seconds} minutes`;

                // If the timer reaches 0, stop the interval and hide the countdown
                if (--timer < 0) {
                    clearInterval(interval);
                    countdownElement.textContent = "The service has arrived!";
                }
            }, 1000); // Update every second
        }

        function getUserLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const userLat = position.coords.latitude;
                    const userLng = position.coords.longitude;
                    showMap(userLat, userLng); // Show the map with user's location
                }, () => {
                    alert("Could not get your location. Using default location.");
                    showMap(33.3062, -111.8413); // Default to Chandler, AZ
                });
            } else {
                alert("Geolocation is not supported by your browser.");
                showMap(33.3062, -111.8413); // Default to Chandler, AZ
            }
        }

        function showMap(lat, lng) {
            const mapElement = document.getElementById("map");
            mapElement.style.display = "block";

            if (!map) {
                // Initialize the map
                map = L.map("map").setView([lat, lng], 13);

                // Add OpenStreetMap tiles
                L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 19,
                }).addTo(map);

                // Add user's real-time location marker
                breakdownMarker = L.marker([lat, lng]).addTo(map)
                    .bindPopup("Your Breakdown Location").openPopup();

                // Add a nearby service vehicle marker
                serviceMarker = L.marker([lat + 0.01, lng + 0.01]).addTo(map)
                    .bindPopup("Service Vehicle Location");
            } else {
                // Update markers if map is already initialized
                breakdownMarker.setLatLng([lat, lng]).bindPopup("Your Breakdown Location").openPopup();
                serviceMarker.setLatLng([lat + 0.01, lng + 0.01]).bindPopup("Service Vehicle Location");
                map.setView([lat, lng], 13);
            }
        }
    </script>
</body>
</html>
